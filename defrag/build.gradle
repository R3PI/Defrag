apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'android-apt'

group = 'com.solera.defrag'
version = '1.1.4'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 2
        versionName "${version}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.aar'])
    testCompile 'junit:junit:4.12'

    compile "com.android.support:appcompat-v7:${android_support_lib_version}"
    compile "com.android.support:support-annotations:${android_support_lib_version}"
}

def siteUrl = 'https://github.com/R3PI/Defrag'
def gitUrl = 'https://github.com/R3PI/Defrag.git'


bintray {
    //Initialise bintray user/api_key from local.properties file
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'Maven'
        name = 'Defrag'
        desc = 'Defrag is a simple to use library that allows for Fragment-free Android applications'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/R3PI/Defrag/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android']
        publicDownloadNumbers = false
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Defrag description'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'tomjhall'
                        name 'Tom Hall'
                        email 'tom_j_hall@hotmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/R3PI/Defrag.git'
                    developerConnection 'https://github.com/R3PI/Defrag.git'
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

