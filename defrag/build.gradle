apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'android-apt'

group = 'com.solera.defrag'
version = '0.8.1'

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.3"

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 23
    versionCode 1
    versionName "${version}"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  testCompile 'junit:junit:4.12'

  compile "com.android.support:appcompat-v7:${android_support_lib_version}"
  compile "com.android.support:support-annotations:${android_support_lib_version}"

  compile "com.github.frankiesardo:auto-parcel:${auto_parcel_lib_version}"
  apt "com.github.frankiesardo:auto-parcel-processor:${auto_parcel_lib_version}"
}

def siteUrl = 'https://github.com/R3PI/Defrag'
def gitUrl = 'https://github.com/R3PI/Defrag.git'

bintray {
  user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
  key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

  configurations = ['archives'] //When uploading configuration files
  pkg {
    repo = 'Defrag1'
    name = 'Defrag'
    desc = 'Defrag desc'
    websiteUrl = siteUrl
    issueTrackerUrl = 'https://github.com/bintray/bintray-examples/issues'
    vcsUrl = gitUrl
    licenses = ['Apache-2.0']
    labels = ['aar', 'android']
    publicDownloadNumbers = false
  }
}

install {
  repositories.mavenInstaller {
    pom {
      project {
        packaging 'aar'
        name 'Defrag description'
        url siteUrl
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'tomjhall'
            name 'Tom Hall'
            email 'tom_j_hall@hotmail.com'
          }
        }
        scm {
          connection 'https://github.com/R3PI/Defrag.git'
          developerConnection 'https://github.com/R3PI/Defrag.git'
          url siteUrl
        }
      }
    }
  }
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

task findConventions << {
  println project.getConvention()
}

